---
import { Toaster } from "@/components/ui/sonner"
import "@/styles/globals.css"
import { ViewTransitions } from "astro:transitions"
import { AsideMenu } from "@/components/common/AsideMenu"
import { supabase } from "../lib/supabase"

interface Props {
	title: string
}
const { title } = Astro.props

const { cookies } = Astro

const accessToken = cookies.get("sb-access-token")
const refreshToken = cookies.get("sb-refresh-token")

const { error } = await supabase.auth.setSession({
	refresh_token: refreshToken?.value || "",
	access_token: accessToken?.value || "",
})

if (error) {
	cookies.delete("sb-access-token", {
		path: "/",
	})
	cookies.delete("sb-refresh-token", {
		path: "/",
	})
	return Astro.redirect("/signin")
}
---

<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
			return localStorage.getItem("theme")
		}
		return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light"
	}
	const isDark = getThemePreference() === "dark"
	document.documentElement.classList[isDark ? "add" : "remove"]("dark")

	if (typeof localStorage !== "undefined") {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains("dark")
			localStorage.setItem("theme", isDark ? "dark" : "light")
		})
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ["class"] })
	}
</script>

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ViewTransitions fallback="none" />
	</head>
	<body>
		<div class="flex min-h-screen w-full flex-col bg-muted/40">
			<AsideMenu client:load />
			<div class="flex flex-col sm:gap-4 sm:py-4 sm:pl-14">
				<main class="grid flex-1 items-start gap-4 p-4 sm:px-6 sm:py-0 md:gap-8">
					<slot />
				</main>
				<Toaster client:load />
			</div>
		</div>
	</body>
</html>
